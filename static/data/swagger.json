{
  "openapi": "3.0.2",
  "info": { "title": "FastAPI", "version": "0.1.0" },
  "paths": {
    "/v2/link/token": {
      "post": {
        "tags": ["vital-api", "link"],
        "summary": "Generate Vital Link Token",
        "description": "POST Generate user Link token using user_id.",
        "operationId": "generate_vital_link_token_v2_link_token_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LinkTokenExchange" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkTokenExchangeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/link/provider/oauth/{oauth_provider}": {
      "get": {
        "tags": ["vital-api", "link"],
        "summary": "Get Oauth Provider",
        "description": "REQUEST_SOURCE: CUSTOMER\nPROVIDER_TYPE: OAUTH-PROVIDER\nThis function is hit by custom-ui to get an oauth link.",
        "operationId": "get_oauth_provider_v2_link_provider_oauth__oauth_provider__get",
        "parameters": [
          {
            "required": true,
            "schema": { "$ref": "#/components/schemas/OAuthProviders" },
            "name": "oauth_provider",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Source" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/link/provider/password/{provider}": {
      "post": {
        "tags": ["vital-api", "link"],
        "summary": "Connect Individual Provider",
        "description": "REQUEST_SOURCE: CUSTOMER\nPROVIDER_TYPE: PASSWORD-AUTH\nThis connects auth providers that are password based.",
        "operationId": "connect_individual_provider_v2_link_provider_password__provider__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Providers that require password auth, whoop, renpho, peloton, zwift",
              "allOf": [{ "$ref": "#/components/schemas/PasswordProviders" }]
            },
            "name": "provider",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IndividualProviderData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderLinkResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/summary/profile/{user_id}": {
      "get": {
        "tags": ["vital-api", "summary"],
        "summary": "Get User Profile",
        "description": "Get Daily profile for user_id",
        "operationId": "get_user_profile_v2_summary_profile__user_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User id returned by vital create user id request. This id should be stored in your database against the user and used for all interactions with the vital api.",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "Provider oura/strava etc.",
            "required": false,
            "schema": {
              "title": "Provider",
              "type": "string",
              "description": "Provider oura/strava etc.",
              "default": ""
            },
            "name": "provider",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ClientFacingProfile" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["vital-api", "summary"],
        "summary": "Post User Profile",
        "operationId": "post_user_profile_v2_summary_profile__user_id__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User id returned by vital create user id request. This id should be stored in your database against the user and used for all interactions with the vital api.",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManualProfileCreationPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post User Profile V2 Summary Profile  User Id  Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/summary/profile/{user_id}/raw": {
      "get": {
        "tags": ["vital-api", "summary"],
        "summary": "Get User Profile Raw",
        "description": "Get Daily profile for user_id",
        "operationId": "get_user_profile_raw_v2_summary_profile__user_id__raw_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User id returned by vital create user id request. This id should be stored in your database against the user and used for all interactions with the vital api.",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "Provider oura/strava etc.",
            "required": false,
            "schema": {
              "title": "Provider",
              "type": "string",
              "description": "Provider oura/strava etc.",
              "default": ""
            },
            "name": "provider",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RawProfile" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/summary/devices/{user_id}/raw": {
      "get": {
        "tags": ["vital-api", "summary"],
        "summary": "Get User Devices Raw",
        "description": "Get Devices for user_id",
        "operationId": "get_user_devices_raw_v2_summary_devices__user_id__raw_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User id returned by vital create user id request. This id should be stored in your database against the user and used for all interactions with the vital api.",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "Provider oura/strava etc.",
            "required": false,
            "schema": {
              "title": "Provider",
              "type": "string",
              "description": "Provider oura/strava etc.",
              "default": ""
            },
            "name": "provider",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RawDevices" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/summary/activity/{user_id}": {
      "get": {
        "tags": ["vital-api", "summary"],
        "summary": "Get User Activity",
        "description": "Get Daily Activity for user_id",
        "operationId": "get_user_activity_v2_summary_activity__user_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User id returned by vital create user id request. This id should be stored in your database against the user and used for all interactions with the vital api.",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "Provider oura/strava etc.",
            "required": false,
            "schema": {
              "title": "Provider",
              "type": "string",
              "description": "Provider oura/strava etc.",
              "default": ""
            },
            "name": "provider",
            "in": "query"
          },
          {
            "description": "Date from in YYYY-MM-DD",
            "required": true,
            "schema": {
              "title": "Start Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date from in YYYY-MM-DD"
            },
            "name": "start_date",
            "in": "query"
          },
          {
            "description": "Date to in YYYY-MM-DD",
            "required": false,
            "schema": {
              "title": "End Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date to in YYYY-MM-DD"
            },
            "name": "end_date",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientActivityResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["vital-api", "summary"],
        "summary": "Post User Activity",
        "operationId": "post_user_activity_v2_summary_activity__user_id__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User id returned by vital create user id request. This id should be stored in your database against the user and used for all interactions with the vital api.",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManualActivityCreationPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post User Activity V2 Summary Activity  User Id  Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/summary/activity/{user_id}/raw": {
      "get": {
        "tags": ["vital-api", "summary"],
        "summary": "Get User Activity Raw",
        "description": "Get Daily Activity for user_id",
        "operationId": "get_user_activity_raw_v2_summary_activity__user_id__raw_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User id returned by vital create user id request. This id should be stored in your database against the user and used for all interactions with the vital api.",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "Provider oura/strava etc.",
            "required": false,
            "schema": {
              "title": "Provider",
              "type": "string",
              "description": "Provider oura/strava etc.",
              "default": ""
            },
            "name": "provider",
            "in": "query"
          },
          {
            "description": "Date from in YYYY-MM-DD",
            "required": true,
            "schema": {
              "title": "Start Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date from in YYYY-MM-DD"
            },
            "name": "start_date",
            "in": "query"
          },
          {
            "description": "Date to in YYYY-MM-DD",
            "required": false,
            "schema": {
              "title": "End Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date to in YYYY-MM-DD"
            },
            "name": "end_date",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RawActivity" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/summary/workouts/{user_id}": {
      "get": {
        "tags": ["vital-api", "summary"],
        "summary": "Get User Workouts",
        "description": "Get Daily workout for user_id",
        "operationId": "get_user_workouts_v2_summary_workouts__user_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User id returned by vital create user id request. This id should be stored in your database against the user and used for all interactions with the vital api.",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "Provider oura/strava etc.",
            "required": false,
            "schema": {
              "title": "Provider",
              "type": "string",
              "description": "Provider oura/strava etc.",
              "default": ""
            },
            "name": "provider",
            "in": "query"
          },
          {
            "description": "Date from in YYYY-MM-DD",
            "required": true,
            "schema": {
              "title": "Start Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date from in YYYY-MM-DD"
            },
            "name": "start_date",
            "in": "query"
          },
          {
            "description": "Date to in YYYY-MM-DD",
            "required": false,
            "schema": {
              "title": "End Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date to in YYYY-MM-DD"
            },
            "name": "end_date",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientWorkoutResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["vital-api", "summary"],
        "summary": "Post User Workout",
        "operationId": "post_user_workout_v2_summary_workouts__user_id__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User id returned by vital create user id request. This id should be stored in your database against the user and used for all interactions with the vital api.",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManualWorkoutCreationPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post User Workout V2 Summary Workouts  User Id  Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/summary/workouts/{user_id}/raw": {
      "get": {
        "tags": ["vital-api", "summary"],
        "summary": "Get User Workouts Raw",
        "description": "Get Daily workout for user_id",
        "operationId": "get_user_workouts_raw_v2_summary_workouts__user_id__raw_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User id returned by vital create user id request. This id should be stored in your database against the user and used for all interactions with the vital api.",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "Provider oura/strava etc.",
            "required": false,
            "schema": {
              "title": "Provider",
              "type": "string",
              "description": "Provider oura/strava etc.",
              "default": ""
            },
            "name": "provider",
            "in": "query"
          },
          {
            "description": "Date from in YYYY-MM-DD",
            "required": true,
            "schema": {
              "title": "Start Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date from in YYYY-MM-DD"
            },
            "name": "start_date",
            "in": "query"
          },
          {
            "description": "Date to in YYYY-MM-DD",
            "required": false,
            "schema": {
              "title": "End Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date to in YYYY-MM-DD"
            },
            "name": "end_date",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RawWorkout" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/summary/sleep/{user_id}": {
      "get": {
        "tags": ["vital-api", "summary"],
        "summary": "Get User Sleep",
        "description": "Get Daily sleep for user_id",
        "operationId": "get_user_sleep_v2_summary_sleep__user_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User id returned by vital create user id request. This id should be stored in your database against the user and used for all interactions with the vital api.",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "Provider oura/strava etc.",
            "required": false,
            "schema": {
              "title": "Provider",
              "type": "string",
              "description": "Provider oura/strava etc.",
              "default": ""
            },
            "name": "provider",
            "in": "query"
          },
          {
            "description": "Date from in YYYY-MM-DD",
            "required": true,
            "schema": {
              "title": "Start Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date from in YYYY-MM-DD"
            },
            "name": "start_date",
            "in": "query"
          },
          {
            "description": "Date to in YYYY-MM-DD",
            "required": false,
            "schema": {
              "title": "End Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date to in YYYY-MM-DD"
            },
            "name": "end_date",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ClientSleepResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["vital-api", "summary"],
        "summary": "Post User Sleep",
        "operationId": "post_user_sleep_v2_summary_sleep__user_id__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User id returned by vital create user id request. This id should be stored in your database against the user and used for all interactions with the vital api.",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManualSleepCreationPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post User Sleep V2 Summary Sleep  User Id  Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/summary/sleep/{user_id}/stream": {
      "get": {
        "tags": ["vital-api", "summary"],
        "summary": "Get User Sleep Stream",
        "description": "Get Daily sleep stream for user_id",
        "operationId": "get_user_sleep_stream_v2_summary_sleep__user_id__stream_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User id returned by vital create user id request. This id should be stored in your database against the user and used for all interactions with the vital api.",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "Provider oura/strava etc.",
            "required": false,
            "schema": {
              "title": "Provider",
              "type": "string",
              "description": "Provider oura/strava etc.",
              "default": ""
            },
            "name": "provider",
            "in": "query"
          },
          {
            "description": "Date from in YYYY-MM-DD",
            "required": true,
            "schema": {
              "title": "Start Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date from in YYYY-MM-DD"
            },
            "name": "start_date",
            "in": "query"
          },
          {
            "description": "Date to in YYYY-MM-DD",
            "required": false,
            "schema": {
              "title": "End Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date to in YYYY-MM-DD"
            },
            "name": "end_date",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ClientSleepResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/summary/sleep/{user_id}/raw": {
      "get": {
        "tags": ["vital-api", "summary"],
        "summary": "Get User Sleep Raw",
        "description": "Get Daily sleep for user_id",
        "operationId": "get_user_sleep_raw_v2_summary_sleep__user_id__raw_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User id returned by vital create user id request. This id should be stored in your database against the user and used for all interactions with the vital api.",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "Provider oura/strava etc.",
            "required": false,
            "schema": {
              "title": "Provider",
              "type": "string",
              "description": "Provider oura/strava etc.",
              "default": ""
            },
            "name": "provider",
            "in": "query"
          },
          {
            "description": "Date from in YYYY-MM-DD",
            "required": true,
            "schema": {
              "title": "Start Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date from in YYYY-MM-DD"
            },
            "name": "start_date",
            "in": "query"
          },
          {
            "description": "Date to in YYYY-MM-DD",
            "required": false,
            "schema": {
              "title": "End Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date to in YYYY-MM-DD"
            },
            "name": "end_date",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RawSleep" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/summary/body/{user_id}": {
      "get": {
        "tags": ["vital-api", "summary"],
        "summary": "Get User Body",
        "description": "Get Daily Body data for user_id",
        "operationId": "get_user_body_v2_summary_body__user_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User id returned by vital create user id request. This id should be stored in your database against the user and used for all interactions with the vital api.",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "Provider oura/strava etc.",
            "required": false,
            "schema": {
              "title": "Provider",
              "type": "string",
              "description": "Provider oura/strava etc.",
              "default": ""
            },
            "name": "provider",
            "in": "query"
          },
          {
            "description": "Date from in YYYY-MM-DD",
            "required": true,
            "schema": {
              "title": "Start Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date from in YYYY-MM-DD"
            },
            "name": "start_date",
            "in": "query"
          },
          {
            "description": "Date to in YYYY-MM-DD",
            "required": false,
            "schema": {
              "title": "End Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date to in YYYY-MM-DD"
            },
            "name": "end_date",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ClientBodyResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["vital-api", "summary"],
        "summary": "Post User Body",
        "operationId": "post_user_body_v2_summary_body__user_id__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User id returned by vital create user id request. This id should be stored in your database against the user and used for all interactions with the vital api.",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManualBodyCreationPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post User Body V2 Summary Body  User Id  Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/summary/body/{user_id}/raw": {
      "get": {
        "tags": ["vital-api", "summary"],
        "summary": "Get User Body Raw",
        "description": "Get Daily Body data for user_id",
        "operationId": "get_user_body_raw_v2_summary_body__user_id__raw_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User id returned by vital create user id request. This id should be stored in your database against the user and used for all interactions with the vital api.",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "Provider oura/strava etc.",
            "required": false,
            "schema": {
              "title": "Provider",
              "type": "string",
              "description": "Provider oura/strava etc.",
              "default": ""
            },
            "name": "provider",
            "in": "query"
          },
          {
            "description": "Date from in YYYY-MM-DD",
            "required": true,
            "schema": {
              "title": "Start Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date from in YYYY-MM-DD"
            },
            "name": "start_date",
            "in": "query"
          },
          {
            "description": "Date to in YYYY-MM-DD",
            "required": false,
            "schema": {
              "title": "End Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date to in YYYY-MM-DD"
            },
            "name": "end_date",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RawBody" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/summary/vitals/{user_id}/blood_pressure": {
      "post": {
        "tags": ["vital-api", "summary"],
        "summary": "Post User Blood Pressure",
        "operationId": "post_user_blood_pressure_v2_summary_vitals__user_id__blood_pressure_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User id returned by vital create user id request. This id should be stored in your database against the user and used for all interactions with the vital api.",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManualBloodPressureCreationPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post User Blood Pressure V2 Summary Vitals  User Id  Blood Pressure Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/summary/vitals/{user_id}/{resource}": {
      "post": {
        "tags": ["vital-api", "summary"],
        "summary": "Post User Vitals",
        "operationId": "post_user_vitals_v2_summary_vitals__user_id___resource__post",
        "parameters": [
          {
            "required": true,
            "schema": { "$ref": "#/components/schemas/VitalsResource" },
            "name": "resource",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "User id returned by vital create user id request. This id should be stored in your database against the user and used for all interactions with the vital api.",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManualTimeseriesCreationPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Post User Vitals V2 Summary Vitals  User Id   Resource  Post",
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/timeseries/sleep/{sleep_id}/stream": {
      "get": {
        "tags": ["vital-api", "timeseries"],
        "summary": "Get User Sleep Stream",
        "description": "Get Daily Activity for user_id",
        "operationId": "get_user_sleep_stream_v2_timeseries_sleep__sleep_id__stream_get",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Sleep Id", "type": "string" },
            "name": "sleep_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientFacingSleepStream"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/timeseries/workouts/{workout_id}/stream": {
      "get": {
        "tags": ["vital-api", "timeseries"],
        "summary": "Get User Workouts",
        "description": "Get Daily Activity for user_id",
        "operationId": "get_user_workouts_v2_timeseries_workouts__workout_id__stream_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Workout Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "workout_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ClientFacingStream" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/timeseries/{user_id}/blood_pressure": {
      "get": {
        "tags": ["vital-api", "timeseries"],
        "summary": "Get Blood Pressure Data",
        "description": "Get blood pressure data for user.",
        "operationId": "get_blood_pressure_data_v2_timeseries__user_id__blood_pressure_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User id returned by vital create user id request. This id should be stored in your database against the user and used for all interactions with the vital api.",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "Provider oura/strava etc.",
            "required": false,
            "schema": {
              "title": "Provider",
              "type": "string",
              "description": "Provider oura/strava etc.",
              "default": ""
            },
            "name": "provider",
            "in": "query"
          },
          {
            "description": "Date from in YYYY-MM-DD",
            "required": true,
            "schema": {
              "title": "Start Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date from in YYYY-MM-DD"
            },
            "name": "start_date",
            "in": "query"
          },
          {
            "description": "Date to in YYYY-MM-DD",
            "required": false,
            "schema": {
              "title": "End Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date to in YYYY-MM-DD"
            },
            "name": "end_date",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Blood Pressure Data V2 Timeseries  User Id  Blood Pressure Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientFacingBloodPressureTimeseries"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/timeseries/{user_id}/glucose": {
      "get": {
        "tags": ["vital-api", "timeseries"],
        "summary": "Get Glucose Data",
        "description": "Get Glucose data for user.",
        "operationId": "get_glucose_data_v2_timeseries__user_id__glucose_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User id returned by vital create user id request. This id should be stored in your database against the user and used for all interactions with the vital api.",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "Provider oura/strava etc.",
            "required": false,
            "schema": {
              "title": "Provider",
              "type": "string",
              "description": "Provider oura/strava etc.",
              "default": ""
            },
            "name": "provider",
            "in": "query"
          },
          {
            "description": "Date from in YYYY-MM-DD",
            "required": true,
            "schema": {
              "title": "Start Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date from in YYYY-MM-DD"
            },
            "name": "start_date",
            "in": "query"
          },
          {
            "description": "Date to in YYYY-MM-DD",
            "required": false,
            "schema": {
              "title": "End Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date to in YYYY-MM-DD"
            },
            "name": "end_date",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Blood Pressure Data V2 Timeseries  User Id  Blood Pressure Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientFacingGlucoseTimeseries"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/timeseries/{user_id}/heartrate": {
      "get": {
        "tags": ["vital-api", "timeseries"],
        "summary": "Get Heartrate Data",
        "description": "Get Heartrate data for user.",
        "operationId": "get_glucose_data_v2_timeseries__user_id__glucose_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User id returned by vital create user id request. This id should be stored in your database against the user and used for all interactions with the vital api.",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "Provider oura/strava etc.",
            "required": false,
            "schema": {
              "title": "Provider",
              "type": "string",
              "description": "Provider oura/strava etc.",
              "default": ""
            },
            "name": "provider",
            "in": "query"
          },
          {
            "description": "Date from in YYYY-MM-DD",
            "required": true,
            "schema": {
              "title": "Start Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date from in YYYY-MM-DD"
            },
            "name": "start_date",
            "in": "query"
          },
          {
            "description": "Date to in YYYY-MM-DD",
            "required": false,
            "schema": {
              "title": "End Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date to in YYYY-MM-DD"
            },
            "name": "end_date",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Blood Pressure Data V2 Timeseries  User Id  Blood Pressure Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientFacingHeartrateTimeseries"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/timeseries/{user_id}/ige": {
      "get": {
        "tags": ["vital-api", "timeseries"],
        "summary": "Get ige Data",
        "description": "Get ige data for user.",
        "operationId": "get_glucose_data_v2_timeseries__user_id__glucose_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User id returned by vital create user id request. This id should be stored in your database against the user and used for all interactions with the vital api.",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "Provider oura/strava etc.",
            "required": false,
            "schema": {
              "title": "Provider",
              "type": "string",
              "description": "Provider oura/strava etc.",
              "default": ""
            },
            "name": "provider",
            "in": "query"
          },
          {
            "description": "Date from in YYYY-MM-DD",
            "required": true,
            "schema": {
              "title": "Start Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date from in YYYY-MM-DD"
            },
            "name": "start_date",
            "in": "query"
          },
          {
            "description": "Date to in YYYY-MM-DD",
            "required": false,
            "schema": {
              "title": "End Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date to in YYYY-MM-DD"
            },
            "name": "end_date",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Blood Pressure Data V2 Timeseries  User Id  Blood Pressure Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientFacingIGETimeseries"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/timeseries/{user_id}/igg": {
      "get": {
        "tags": ["vital-api", "timeseries"],
        "summary": "Get igg Data",
        "description": "Get igg data for user.",
        "operationId": "get_glucose_data_v2_timeseries__user_id__glucose_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User id returned by vital create user id request. This id should be stored in your database against the user and used for all interactions with the vital api.",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "Provider oura/strava etc.",
            "required": false,
            "schema": {
              "title": "Provider",
              "type": "string",
              "description": "Provider oura/strava etc.",
              "default": ""
            },
            "name": "provider",
            "in": "query"
          },
          {
            "description": "Date from in YYYY-MM-DD",
            "required": true,
            "schema": {
              "title": "Start Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date from in YYYY-MM-DD"
            },
            "name": "start_date",
            "in": "query"
          },
          {
            "description": "Date to in YYYY-MM-DD",
            "required": false,
            "schema": {
              "title": "End Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date to in YYYY-MM-DD"
            },
            "name": "end_date",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Blood Pressure Data V2 Timeseries  User Id  Blood Pressure Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientFacingIGGTimeseries"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/timeseries/{user_id}/{resource}": {
      "get": {
        "tags": ["vital-api", "timeseries"],
        "summary": "Get Timeseries Resource Data",
        "description": "Get timeseries data for user",
        "operationId": "get_timeseries_resource_data_v2_timeseries__user_id___resource__get",
        "parameters": [
          {
            "required": true,
            "schema": { "$ref": "#/components/schemas/TimeseriesResource" },
            "name": "resource",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "User id returned by vital create user id request. This id should be stored in your database against the user and used for all interactions with the vital api.",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "description": "Provider oura/strava etc.",
            "required": false,
            "schema": {
              "title": "Provider",
              "type": "string",
              "description": "Provider oura/strava etc.",
              "default": ""
            },
            "name": "provider",
            "in": "query"
          },
          {
            "description": "Date from in YYYY-MM-DD",
            "required": true,
            "schema": {
              "title": "Start Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date from in YYYY-MM-DD"
            },
            "name": "start_date",
            "in": "query"
          },
          {
            "description": "Date to in YYYY-MM-DD",
            "required": false,
            "schema": {
              "title": "End Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date to in YYYY-MM-DD"
            },
            "name": "end_date",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Timeseries Resource Data V2 Timeseries  User Id   Resource  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientFacingTimeseries"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/user/": {
      "get": {
        "tags": ["vital-api", "user"],
        "summary": "Get Teams Users",
        "description": "GET All users for team.",
        "operationId": "get_teams_users_v2_user__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Teams Users V2 User  Get",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/ClientFacingUser" }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["vital-api", "user"],
        "summary": "Create User",
        "description": "POST Create's a vital user given a client_user_id and returns the user_id",
        "operationId": "create_user_v2_user__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ClientFacingUserKey" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/user/providers/{user_id}": {
      "get": {
        "tags": ["vital-api", "user"],
        "summary": "Get Connected Providers",
        "description": "GET Users connected providers",
        "operationId": "get_connected_providers_v2_user_providers__user_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User id returned by vital create user id request. This id should be stored in your database against the user and used for all interactions with the vital api.",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Connected Providers V2 User Providers  User Id  Get",
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ClientFacingSource"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/user/{user_id}": {
      "get": {
        "tags": ["vital-api", "user"],
        "summary": "Get User",
        "description": "GET User details given the user_id.",
        "operationId": "get_user_v2_user__user_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User id returned by vital create user id request. This id should be stored in your database against the user and used for all interactions with the vital api.",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ClientFacingUser" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["vital-api", "user"],
        "summary": "Delete User",
        "operationId": "delete_user_v2_user__user_id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User id returned by vital create user id request. This id should be stored in your database against the user and used for all interactions with the vital api.",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserSuccessResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/user/{user_id}/{provider}": {
      "delete": {
        "tags": ["vital-api", "user"],
        "summary": "Deregister Provider",
        "operationId": "deregister_provider_v2_user__user_id___provider__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User id returned by vital create user id request. This id should be stored in your database against the user and used for all interactions with the vital api.",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": { "$ref": "#/components/schemas/Providers" },
            "name": "provider",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserSuccessResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/user/refresh/{user_id}": {
      "post": {
        "tags": ["vital-api", "user"],
        "summary": "Refresh User Id",
        "description": "Trigger a manual refresh for a specific user",
        "operationId": "refresh_user_id_v2_user_refresh__user_id__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserRefreshResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/providers/": {
      "get": {
        "tags": ["vital-api", "providers"],
        "summary": "Get List Of Providers",
        "description": "Get Provider list",
        "operationId": "get_list_of_providers_v2_providers__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get List Of Providers V2 Providers  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientFacingSourceDetailed"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/testkit/orders": {
      "get": {
        "tags": ["vital-api", "testkit_orders"],
        "summary": "Get Orders",
        "description": "Get testkit order for team",
        "operationId": "get_orders_v2_testkit_orders_get",
        "parameters": [
          {
            "description": "Date from in YYYY-MM-DD",
            "required": true,
            "schema": {
              "title": "Start Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date from in YYYY-MM-DD"
            },
            "name": "start_date",
            "in": "query"
          },
          {
            "description": "Date to in YYYY-MM-DD",
            "required": true,
            "schema": {
              "title": "End Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date to in YYYY-MM-DD"
            },
            "name": "end_date",
            "in": "query"
          },
          {
            "description": "Filter by user ID.",
            "required": false,
            "schema": {
              "title": "User Id",
              "type": "string",
              "description": "Filter by user ID.",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "query"
          },
          {
            "description": "Filter by patient name.",
            "required": false,
            "schema": {
              "title": "Patient Name",
              "type": "string",
              "description": "Filter by patient name."
            },
            "name": "patient_name",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Page",
              "minimum": 1.0,
              "type": "integer",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Size",
              "maximum": 100.0,
              "minimum": 1.0,
              "type": "integer",
              "default": 50
            },
            "name": "size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrdersResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["vital-api", "testkit_orders"],
        "summary": "Create Order",
        "description": "POST Create User Order",
        "operationId": "create_order_v2_testkit_orders_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrdersRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/testkit/orders/": {
      "get": {
        "tags": ["vital-api", "testkit_orders"],
        "summary": "Get Orders",
        "description": "Get testkit order for team",
        "operationId": "get_orders_v2_testkit_orders__get",
        "parameters": [
          {
            "description": "Date from in YYYY-MM-DD",
            "required": true,
            "schema": {
              "title": "Start Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date from in YYYY-MM-DD"
            },
            "name": "start_date",
            "in": "query"
          },
          {
            "description": "Date to in YYYY-MM-DD",
            "required": true,
            "schema": {
              "title": "End Date",
              "anyOf": [
                { "type": "string" },
                { "type": "string", "format": "date-time" }
              ],
              "description": "Date to in YYYY-MM-DD"
            },
            "name": "end_date",
            "in": "query"
          },
          {
            "description": "Filter by user ID.",
            "required": false,
            "schema": {
              "title": "User Id",
              "type": "string",
              "description": "Filter by user ID.",
              "format": "uuid"
            },
            "name": "user_id",
            "in": "query"
          },
          {
            "description": "Filter by patient name.",
            "required": false,
            "schema": {
              "title": "Patient Name",
              "type": "string",
              "description": "Filter by patient name."
            },
            "name": "patient_name",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Page",
              "minimum": 1.0,
              "type": "integer",
              "default": 1
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Size",
              "maximum": 100.0,
              "minimum": 1.0,
              "type": "integer",
              "default": 50
            },
            "name": "size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrdersResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["vital-api", "testkit_orders"],
        "summary": "Create Order",
        "description": "POST Create User Order",
        "operationId": "create_order_v2_testkit_orders__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrdersRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/testkit/orders/{order_id}": {
      "get": {
        "tags": ["vital-api", "testkit_orders"],
        "summary": "Get Order",
        "description": "Get individual order",
        "operationId": "get_order_v2_testkit_orders__order_id__get",
        "parameters": [
          {
            "description": "Your Order ID.",
            "required": true,
            "schema": {
              "title": "Order Id",
              "type": "string",
              "description": "Your Order ID.",
              "format": "uuid"
            },
            "name": "order_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ClientFacingOrder" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/testkit/orders/{order_id}/cancel": {
      "post": {
        "tags": ["vital-api", "testkit_orders"],
        "summary": "Cancel Order",
        "description": "DELETE Delete User Order",
        "operationId": "cancel_order_v2_testkit_orders__order_id__cancel_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Order Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "order_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OrderResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/testkit/orders/{order_id}/results": {
      "get": {
        "tags": ["vital-api", "testkit_orders"],
        "summary": "Get Testkit Result",
        "description": "Get available test kits.",
        "operationId": "get_testkit_result_v2_testkit_orders__order_id__results_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Order Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "order_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TestkitsResults"} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/testkit/orders/{order_id}/test": {
      "post": {
        "tags": ["vital-api", "testkit_orders"],
        "summary": "Test Testkit Process",
        "description": "Get available test kits.",
        "operationId": "test_testkit_process_v2_testkit_orders__order_id__test_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Order Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "order_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/testkit/orders/{order_id}/results/metadata": {
      "get": {
        "tags": ["vital-api", "testkit_orders"],
        "summary": "Get Testkit Result Metadata",
        "description": "1. Get order result by order_id\n2. Return results as Lab Results Metadata and data as raw json",
        "operationId": "get_testkit_result_metadata_v2_testkit_orders__order_id__results_metadata_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Order Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "order_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LabResultsMetadata" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v2/testkit/orders/{order_id}/results/raw": {
      "get": {
        "tags": ["vital-api", "testkit_orders"],
        "summary": "Get Testkit Result Raw",
        "description": "1. Get order result by order_id\n2. Return results as Lab Results Metadata and data as raw json",
        "operationId": "get_testkit_result_raw_v2_testkit_orders__order_id__results_raw_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Order Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "order_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LabResultsRaw" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActivityV2InDB": {
        "title": "ActivityV2InDB",
        "required": ["timestamp", "provider_id", "user_id", "source_id", "id"],
        "type": "object",
        "properties": {
          "timestamp": {
            "title": "Timestamp",
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "title": "Data",
            "type": "string",
            "format": "json-string"
          },
          "provider_id": { "title": "Provider Id", "type": "string" },
          "user_id": { "title": "User Id", "type": "string", "format": "uuid" },
          "source_id": { "title": "Source Id", "type": "integer" },
          "priority_id": { "title": "Priority Id", "type": "integer" },
          "id": { "title": "Id", "type": "string", "format": "uuid" },
          "source": { "$ref": "#/components/schemas/ClientFacingSource" },
          "priority": { "title": "Priority", "type": "integer" }
        }
      },
      "BiologicalSex": {
        "title": "BiologicalSex",
        "enum": ["not_set", "female", "male", "other"],
        "description": "An enumeration."
      },
      "BodyV2InDB": {
        "title": "BodyV2InDB",
        "required": ["timestamp", "provider_id", "user_id", "source_id", "id"],
        "type": "object",
        "properties": {
          "timestamp": {
            "title": "Timestamp",
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "title": "Data",
            "type": "string",
            "format": "json-string"
          },
          "provider_id": { "title": "Provider Id", "type": "string" },
          "user_id": { "title": "User Id", "type": "string", "format": "uuid" },
          "source_id": { "title": "Source Id", "type": "integer" },
          "priority_id": { "title": "Priority Id", "type": "integer" },
          "id": { "title": "Id", "type": "string", "format": "uuid" },
          "source": { "$ref": "#/components/schemas/ClientFacingSource" },
          "priority": { "title": "Priority", "type": "integer" }
        }
      },
      "ClientActivityResponse": {
        "title": "Daily Activity",
        "required": ["activity"],
        "type": "object",
        "properties": {
          "activity": {
            "title": "Activity",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ClientFacingActivity" }
          }
        },
        "example": {
          "activity": [
            {
              "date": "2022-04-20",
              "calories_total": 100,
              "calories_active": 2000,
              "steps": 10000,
              "daily_movement": 200,
              "low": 6400,
              "medium": 6400,
              "high": 6000,
              "source": {
                "name": "Oura",
                "slug": "oura",
                "logo": "https://logo_url.com"
              },
              "user_id": "11eb3e52-cf8d-4a88-a828-c7aa1ab71ad2"
            }
          ]
        }
      },
      "ClientBodyResponse": {
        "title": "ClientBodyResponse",
        "required": ["body"],
        "type": "object",
        "properties": {
          "body": {
            "title": "Body",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ClientFacingBody" }
          }
        },
        "example": {
          "body": [
            {
              "id": "50abf6b9-6097-4d05-8299-f4995d929f68",
              "date": "2022-04-20",
              "weight": "80kg",
              "fat": "30%",
              "age": 28,
              "height": 183,
              "gender": "male",
              "source": {
                "name": "Oura",
                "slug": "oura",
                "logo": "https://logo_url.com"
              },
              "user_id": "7ef0901b-3e43-466f-b7d9-d150896fc082"
            }
          ]
        }
      },
      "ClientFacingActivity": {
        "title": "Daily Activity",
        "required": ["user_id", "id", "date", "source"],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "string",
            "description": "User id returned by vital create user request. This id should be stored in your database against the user and used for all interactions with the vital api.",
            "format": "uuid"
          },
          "user_key": {
            "title": "User Key",
            "type": "string",
            "format": "uuid"
          },
          "id": { "title": "Id", "type": "string", "format": "uuid" },
          "date": {
            "title": "Date",
            "type": "string",
            "description": "Date for specified record",
            "format": "date-time"
          },
          "calories_total": {
            "title": "Calories Total",
            "type": "number",
            "description": "Total energy consumption during the day including Basal Metabolic Rate in kilocalories.::kilocalories"
          },
          "calories_active": {
            "title": "Calories Active",
            "type": "number",
            "description": "Energy consumption caused by the physical activity of the day in kilocalories.::kilocalories"
          },
          "steps": {
            "title": "Steps",
            "type": "integer",
            "description": "Total number of steps registered during the day.::steps"
          },
          "daily_movement": {
            "title": "Daily Movement",
            "type": "number",
            "description": "Daily physical activity as equal meters i.e. amount of walking needed to get the same amount of activity.::meters"
          },
          "low": {
            "title": "Low",
            "type": "number",
            "description": "Number of minutes during the day with low intensity activity (e.g. household work).::minutes"
          },
          "medium": {
            "title": "Medium",
            "type": "number",
            "description": "Number of minutes during the day with medium intensity activity (e.g. walking).::minutes"
          },
          "high": {
            "title": "High",
            "type": "number",
            "description": "Number of minutes during the day with high intensity activity (e.g. running).::minutes"
          },
          "source": {
            "title": "Source",
            "allOf": [{ "$ref": "#/components/schemas/ClientFacingSource" }],
            "description": "Source the data has come from."
          }
        },
        "example": {
          "date": "2022-04-20",
          "calories_total": 100,
          "calories_active": 2000,
          "steps": 10000,
          "daily_movement": 200,
          "low": 6400,
          "medium": 6400,
          "high": 6000,
          "source": {
            "name": "Oura",
            "slug": "oura",
            "logo": "https://logo_url.com"
          },
          "user_id": "bb6929ad-0793-46c7-9e96-c045f01d3535"
        }
      },
      "ClientFacingBloodPressureTimeseries": {
        "title": "ClientFacingBloodPressureTimeseries",
        "required": ["timestamp", "systolic", "diastolic", "unit"],
        "type": "object",
        "properties": {
          "id": { "title": "Id", "type": "integer" },
          "timestamp": {
            "title": "Timestamp",
            "type": "string",
            "format": "date-time"
          },
          "systolic": { "title": "Systolic", "type": "number" },
          "diastolic": { "title": "Diastolic", "type": "number" },
          "type": { "title": "Type", "type": "string" },
          "unit": { "title": "Unit", "type": "string" }
        },
        "example": {
          "blood_pressure": {
            "id": 2,
            "timestamp": "2022-04-20T13:02:02.079776+00:00",
            "systolic": "125",
            "diastolic": "75",
            "type": "cuff",
            "unit": "mmHg"
          }
        }
      },
      "ClientFacingGlucoseTimeseries": {
        "title": "ClientFacingGlucoseTimeseries",
        "required": ["timestamp", "value"],
        "type": "object",
        "properties": {
          "id": { "title": "Id", "type": "integer" },
          "timestamp": {
            "title": "Timestamp",
            "type": "string",
            "format": "date-time"
          },
          "value": { "title": "value", "type": "string" },
          "type": { "title": "Type", "type": "string" },
          "unit": { "title": "Unit", "type": "string" }
        },
        "example": {
          "glucose": {
            "id": 2,
            "timestamp": "2022-04-20T13:02:01.123664+00:00",
            "value": "0.50",
            "type": "automatic | manual_scan",
            "unit": "mg/dL"
          }
        }
      },
      "ClientFacingHeartrateTimeseries": {
        "title": "ClientFacingHeartrateTimeseries",
        "required": ["timestamp", "value"],
        "type": "object",
        "properties": {
          "id": { "title": "Id", "type": "integer" },
          "timestamp": {
            "title": "Timestamp",
            "type": "string",
            "format": "date-time"
          },
          "value": { "title": "value", "type": "string" },
          "type": { "title": "Type", "type": "string" },
          "unit": { "title": "Unit", "type": "string" }
        },
        "example": {
          "heartrate": {
            "id": 123,
      "timestamp": "2022-04-20T13:02:01.123771+00:00",
      "value": "70",
      "type": "automatic",
      "unit": "bpm"
          }
        }
      },
      "ClientFacingIGETimeseries": {
        "title": "ClientFacingIGETimeseries",
        "required": ["timestamp", "value"],
        "type": "object",
        "properties": {
          "id": { "title": "Id", "type": "integer" },
          "timestamp": {
            "title": "Timestamp",
            "type": "string",
            "format": "date-time"
          },
          "value": { "title": "value", "type": "string" },
          "type": { "title": "Type", "type": "string" },
          "unit": { "title": "Unit", "type": "string" }
        },
        "example": {
          "ige": {
            
      "id": 232,
      "timestamp": "2022-04-20T13:02:01.123778+00:00",
      "value": "70",
      "type": "baha_grass",
      "unit": "FSU"
          }
        }
      },
      "ClientFacingIGGTimeseries": {
        "title": "ClientFacingIGGTimeseries",
        "required": ["timestamp", "value"],
        "type": "object",
        "properties": {
          "id": { "title": "Id", "type": "integer" },
          "timestamp": {
            "title": "Timestamp",
            "type": "string",
            "format": "date-time"
          },
          "value": { "title": "value", "type": "string" },
          "type": { "title": "Type", "type": "string" },
          "unit": { "title": "Unit", "type": "string" }
        },
        "example": {
          "igg": {
      "id": 232,
      "timestamp": "2022-04-20T13:02:01.123778+00:00",
      "value": "70",
      "type": "dairy",
      "unit": "FSU"
          }
        }
      },
      "ClientFacingBody": {
        "title": "ClientFacingBody",
        "required": ["user_id", "id", "date", "weight", "source"],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "string",
            "description": "User id returned by vital create user request. This id should be stored in your database against the user and used for all interactions with the vital api.",
            "format": "uuid"
          },
          "user_key": {
            "title": "User Key",
            "type": "string",
            "format": "uuid"
          },
          "id": { "title": "Id", "type": "string", "format": "uuid" },
          "date": { "title": "Date", "type": "string", "format": "date-time" },
          "weight": { "title": "Weight", "type": "number" },
          "fat": { "title": "Fat", "type": "number" },
          "source": { "$ref": "#/components/schemas/ClientFacingSource" }
        }
      },
      "ClientFacingOrder": {
        "title": "ClientFacingOrder",
        "required": [
          "user_id",
          "team_id",
          "created_on",
          "updated_on",
          "testkit_id",
          "testkit",
          "patient_address",
          "patient_details"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "string",
            "description": "User id returned by vital create user request. This id should be stored in your database against the user and used for all interactions with the vital api.",
            "format": "uuid"
          },
          "user_key": {
            "title": "User Key",
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "description": "The Vital Order ID",
            "format": "uuid"
          },
          "team_id": {
            "title": "Team Id",
            "type": "string",
            "description": "Your team id.",
            "format": "uuid"
          },
          "created_on": {
            "title": "Created On",
            "type": "string",
            "description": "When your order was created",
            "format": "date-time"
          },
          "updated_on": {
            "title": "Updated On",
            "type": "string",
            "description": "When your order status was last updated",
            "format": "date-time"
          },
          "status": {
            "allOf": [{ "$ref": "#/components/schemas/OrderStatus" }],
            "description": "Order status: ordered, transit_customer, out_for_delivery, with_customer, transit_lab, delivered_to_lab, processing_lab, completed, failure_to_deliver_to_customer, failure_to_deliver_to_lab, cancelled, do_not_process, unknown"
          },
          "testkit_id": {
            "title": "Testkit Id",
            "type": "string",
            "description": "Testkit id",
            "format": "uuid"
          },
          "testkit": { "$ref": "#/components/schemas/TestkitClientFacing" },
          "inbound_tracking_number": {
            "title": "Inbound Tracking Number",
            "type": "string",
            "description": "Tracking number for delivery to lab"
          },
          "outbound_tracking_number": {
            "title": "Outbound Tracking Number",
            "type": "string",
            "description": "Tracking number for delivery to customer"
          },
          "inbound_tracking_url": {
            "title": "Inbound Tracking Url",
            "type": "string",
            "description": "Tracking url for delivery to lab"
          },
          "outbound_tracking_url": {
            "title": "Outbound Tracking Url",
            "type": "string",
            "description": "Tracking url for delivery to customer"
          },
          "outbound_courier": {
            "title": "Outbound Courier",
            "type": "string",
            "description": "Courier used for delivery to customer"
          },
          "inbound_courier": {
            "title": "Inbound Courier",
            "type": "string",
            "description": "Courier used for delivery to lab"
          },
          "patient_address": {
            "title": "Patient Address",
            "allOf": [{ "$ref": "#/components/schemas/PatientAddress" }],
            "description": "Patient Address"
          },
          "patient_details": {
            "title": "Patient Details",
            "allOf": [{ "$ref": "#/components/schemas/PatientDetails" }],
            "description": "Patient Details"
          },
          "sample_id": {
            "title": "Sample Id",
            "type": "string",
            "description": "Sample ID"
          }
        },
        "example": {
          "id": "01fd24c8-f67d-46f4-8b26-a69ee7715164",
          "team_id": "d47c7f77-d08c-4913-9d86-d6014b9ce3cf",
          "created_on": "2022-04-20T13:02:01.973898+00:00",
          "updated_on": "2022-04-20T13:02:01.973944+00:00",
          "status": "ordered",
          "user_id": "b1a34c5c-32a2-441d-a366-920fe077efec",
          "testkit_id": "0df6938d-ec51-4365-b833-e7c337b7760a",
          "inbound_tracking_number": "<inbound_tracking_number>",
          "outbound_tracking_number": "<outbound_tracking_number>",
          "inbound_tracking_url": "<inbound_tracking_urlr>",
          "outbound_tracking_url": "<outbound_tracking_url>",
          "outbound_courier": "usps",
          "inbound_courier": "usps",
          "testkit": { "name": "CGM", "description": "Glucose CGM" }
        }
      },
      "ClientFacingProfile": {
        "title": "ClientFacingProfile",
        "required": ["user_id", "id"],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "string",
            "description": "User id returned by vital create user request. This id should be stored in your database against the user and used for all interactions with the vital api.",
            "format": "uuid"
          },
          "user_key": {
            "title": "User Key",
            "type": "string",
            "format": "uuid"
          },
          "id": { "title": "Id", "type": "string", "format": "uuid" },
          "height": { "title": "Height", "type": "integer" },
          "gender": { "title": "Gender", "type": "string" },
          "dob": { "title": "Dob", "type": "string" },
          "age": { "title": "Age", "type": "integer" },
          "source": { "$ref": "#/components/schemas/ClientFacingSource" }
        }
      },
      "ClientFacingSleep": {
        "title": "Body Composition Data",
        "required": [
          "user_id",
          "id",
          "date",
          "bedtime_start",
          "bedtime_stop",
          "duration",
          "total",
          "awake",
          "light",
          "rem",
          "deep",
          "source"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "string",
            "description": "User id returned by vital create user request. This id should be stored in your database against the user and used for all interactions with the vital api.",
            "format": "uuid"
          },
          "user_key": {
            "title": "User Key",
            "type": "string",
            "format": "uuid"
          },
          "id": { "title": "Id", "type": "string", "format": "uuid" },
          "date": {
            "title": "Date",
            "type": "string",
            "description": "Date for specified record",
            "format": "date-time"
          },
          "bedtime_start": {
            "title": "Bedtime Start",
            "type": "string",
            "description": "UTC Time when the sleep period started",
            "format": "date-time"
          },
          "bedtime_stop": {
            "title": "Bedtime Stop",
            "type": "string",
            "description": "UTC Time when the sleep period ended",
            "format": "date-time"
          },
          "timezone_offset": {
            "title": "Timezone Offset",
            "type": "integer",
            "description": "Timezone offset from UTC as minutes. For example, EEST (Eastern European Summer Time, +3h) is 180. PST (Pacific Standard Time, -8h) is -480"
          },
          "duration": {
            "title": "Duration",
            "type": "integer",
            "description": "Total duration of the sleep period (sleep.duration = sleep.bedtime_end - sleep.bedtime_start).::seconds"
          },
          "total": {
            "title": "Total",
            "type": "integer",
            "description": "Total amount of sleep registered during the sleep period (sleep.total = sleep.rem + sleep.light + sleep.deep).::seconds"
          },
          "awake": {
            "title": "Awake",
            "type": "integer",
            "description": "Total amount of awake time registered during the sleep period.::seconds"
          },
          "light": {
            "title": "Light",
            "type": "integer",
            "description": "Total amount of light sleep registered during the sleep period::seconds"
          },
          "rem": {
            "title": "Rem",
            "type": "integer",
            "description": "Total amount of REM sleep registered during the sleep period, minutes::seconds"
          },
          "deep": {
            "title": "Deep",
            "type": "integer",
            "description": "Total amount of deep (N3) sleep registered during the sleep period::seconds"
          },
          "hr_lowest": {
            "title": "Hr Lowest",
            "type": "integer",
            "description": "The lowest heart rate (5 minutes sliding average) registered during the sleep period.::beats per minute"
          },
          "hr_average": {
            "title": "Hr Average",
            "type": "integer",
            "description": "The average heart rate registered during the sleep period.::beats per minute"
          },
          "efficiency": {
            "title": "Efficiency",
            "type": "number",
            "description": "Sleep efficiency is the percentage of the sleep period spent asleep (100% * sleep.total / sleep.duration).::perc"
          },
          "latency": {
            "title": "Latency",
            "type": "integer",
            "description": "Detected latency from bedtime_start to the beginning of the first five minutes of persistent sleep.::seconds"
          },
          "temperature_delta": {
            "title": "Temperature Delta",
            "type": "number",
            "description": "Skin temperature deviation from the long-term temperature average.::celcius"
          },
          "average_hrv": {
            "title": "Average Hrv",
            "type": "number",
            "description": "The average heart rate registered during the sleep period.::beats per minute"
          },
          "respiratory_rate": {
            "title": "Respiratory Rate",
            "type": "number",
            "description": "Average respiratory rate.::breaths per minute"
          },
          "source": {
            "title": "Source",
            "allOf": [{ "$ref": "#/components/schemas/ClientFacingSource" }],
            "description": "Source the data has come from."
          },
          "sleep_stream": {
            "title": "Sleep Stream",
            "allOf": [
              { "$ref": "#/components/schemas/ClientFacingSleepStream" }
            ],
            "description": "Hypnogram for sleep stages {\"deep\": 1, \"light\": 2, \"rem\": 3, \"awake\": 4, \"missing_data\": -1}"
          }
        },
        "example": {
          "id": "695d1f4b-36cc-43a1-9dfe-a8288fbe640d",
          "date": "2022-04-20",
          "bedtime_start": "2022-04-20T13:02:01.142646+00:00",
          "bedtime_stop": "2022-04-20T13:02:01.142667+00:00",
          "timezone_offset": 2400,
          "duration": 28800,
          "total": 28800,
          "awake": 2400,
          "light": 2400,
          "rem": 2400,
          "deep": 2400,
          "hr_lowest": 43,
          "hr_average": 50,
          "efficiency": 0.97,
          "latency": 1000,
          "temperature_delta": -0.2,
          "average_hrv": 78,
          "respiratory_rate": 14,
          "source": {
            "name": "Oura",
            "slug": "oura",
            "logo": "https://logo_url.com"
          },
          "user_id": "e5c7111c-6e56-42fb-841e-452e5a7b93ba"
        }
      },
      "ClientFacingSleepStream": {
        "title": "ClientFacingSleepStream",
        "type": "object",
        "properties": {
          "hrv": {
            "title": "Hrv",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ClientFacingTimeseries" }
          },
          "heartrate": {
            "title": "Heartrate",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ClientFacingTimeseries" }
          },
          "hypnogram": {
            "title": "Hypnogram",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ClientFacingTimeseries" }
          },
          "respiratory_rate": {
            "title": "Respiratory Rate",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ClientFacingTimeseries" }
          }
        }
      },
      "ClientFacingSource": {
        "title": "Provider",
        "required": ["name", "slug", "logo"],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Name of source of information"
          },
          "slug": {
            "title": "Slug",
            "type": "string",
            "description": "Slug for designated source"
          },
          "logo": {
            "title": "Logo",
            "type": "string",
            "description": "URL for source logo"
          }
        },
        "example": {
          "name": "Oura",
          "slug": "oura",
          "logo": "https://logo_url.com"
        }
      },
      "ClientFacingSourceDetailed": {
        "title": "Provider",
        "required": ["name", "slug"],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Name of source of information"
          },
          "slug": {
            "title": "Slug",
            "type": "string",
            "description": "Slug for designated source"
          },
          "logo": {
            "title": "Logo",
            "type": "string",
            "description": "URL for source logo"
          },
          "auth_type": { "title": "Auth Type", "type": "string" },
          "supported_resources": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Resource" },
            "default": []
          }
        },
        "example": {
          "name": "Oura",
          "slug": "oura",
          "logo": "https://logo_url.com",
          "auth_type": "oauth",
          "supported_resources": ["workouts", "sleep"]
        }
      },
      "ClientFacingSport": {
        "title": "ClientFacingSport",
        "required": ["id", "name"],
        "type": "object",
        "properties": {
          "id": { "title": "Id", "type": "integer" },
          "name": { "title": "Name", "type": "string" }
        }
      },
      "ClientFacingStream": {
        "title": "ClientFacingStream",
        "type": "object",
        "properties": {
          "cadence": {
            "title": "Cadence",
            "type": "array",
            "items": { "type": "number" },
            "description": "RPM for cycling, Steps per minute for running",
            "default": []
          },
          "time": {
            "title": "Time",
            "type": "array",
            "items": { "type": "integer" },
            "description": "Corresponding time stamp in unix time for datapoint",
            "default": []
          },
          "altitude": {
            "title": "Altitude",
            "type": "array",
            "items": { "type": "number" },
            "description": "Data points for altitude",
            "default": []
          },
          "velocity_smooth": {
            "title": "Velocity Smooth",
            "type": "array",
            "items": { "type": "number" },
            "description": "Velocity in m/s",
            "default": []
          },
          "heartrate": {
            "title": "Heartrate",
            "type": "array",
            "items": { "type": "number" },
            "description": "Heart rate in bpm.",
            "default": []
          },
          "lat": {
            "title": "Lat",
            "type": "array",
            "items": { "type": "number" },
            "description": "Latitude for data point",
            "default": []
          },
          "lng": {
            "title": "Lng",
            "type": "array",
            "items": { "type": "number" },
            "description": "Longitude for data point.",
            "default": []
          },
          "distance": {
            "title": "Distance",
            "type": "array",
            "items": { "type": "number" },
            "description": "Cumulated distance for exercise.",
            "default": []
          },
          "power": {
            "title": "Power",
            "type": "array",
            "items": { "type": "number" },
            "description": "Power in watts",
            "default": []
          },
          "resistance": {
            "title": "Resistance",
            "type": "array",
            "items": { "type": "number" },
            "description": "Resistance on bike",
            "default": []
          }
        },
        "example": {
          "cadence": [10, 12, 12, 11, 10],
          "time": [1626625123, 1626625140, 1626625145, 1626625150, 162662560],
          "heartrate": [120, 125, 125, 130, 135],
          "distance": [12, 15, 18, 20, 25],
          "power": [100, 100, 100, 100, 100],
          "altitude": [10, 20, 30, 40, 50],
          "velocity_smooth": [10, 20, 30, 40, 50],
          "lat": [10, 20, 30, 40, 50],
          "lng": [10, 20, 30, 40, 50],
          "resistance": [10, 20, 30, 40, 50]
        }
      },
      "ClientFacingTimeseries": {
        "title": "ClientFacingTimeseries",
        "required": ["timestamp", "value"],
        "type": "object",
        "properties": {
          "id": { "title": "Id", "type": "integer" },
          "timestamp": {
            "title": "Timestamp",
            "type": "string",
            "format": "date-time"
          },
          "value": { "title": "Value", "type": "number" },
          "type": { "title": "Type", "type": "string" },
          "unit": { "title": "Unit", "type": "string" }
        },
        "example": {
          "glucose": {
            "id": 2,
            "timestamp": "2022-04-20T13:02:01.123664+00:00",
            "value": "0.50",
            "type": "automatic | manual_scan",
            "unit": "mg/dL"
          },
          "cholesterol/ldl": {
            "id": 3,
            "timestamp": "2022-04-20T13:02:01.123733+00:00",
            "value": "0.60",
            "type": "ldl",
            "unit": "mg/dL"
          },
          "cholesterol/hdl": {
            "id": 92,
            "timestamp": "2022-04-20T13:02:01.123745+00:00",
            "value": "0.20",
            "type": "hdl",
            "unit": "mg/dL"
          },
          "cholesterol/total": {
            "id": 8,
            "timestamp": "2022-04-20T13:02:01.123754+00:00",
            "value": "0.70",
            "type": "total",
            "unit": "mg/dL"
          },
          "cholesterol/triglycerides": {
            "id": 100,
            "timestamp": "2022-04-20T13:02:01.123763+00:00",
            "value": "0.70",
            "type": "triglycerides",
            "unit": "mg/dL"
          },
          "heartrate": {
            "id": 123,
            "timestamp": "2022-04-20T13:02:01.123771+00:00",
            "value": "70",
            "type": "automatic",
            "unit": "bpm"
          },
          "ige": {
            "id": 232,
            "timestamp": "2022-04-20T13:02:01.123778+00:00",
            "value": "70",
            "type": "baha_grass",
            "unit": "FSU"
          },
          "igg": {
            "id": 235,
            "timestamp": "2022-04-20T13:02:01.123786+00:00",
            "value": "12.0",
            "type": "dairy",
            "unit": "FSU"
          }
        }
      },
      "ClientFacingUser": {
        "title": "User",
        "required": [
          "user_id",
          "team_id",
          "client_user_id",
          "created_on",
          "connected_sources"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "string",
            "description": "User id returned by vital create user request. This id should be stored in your database against the user and used for all interactions with the vital api.",
            "format": "uuid"
          },
          "user_key": {
            "title": "User Key",
            "type": "string",
            "format": "uuid"
          },
          "team_id": {
            "title": "Team Id",
            "type": "string",
            "description": "Your team id.",
            "format": "uuid"
          },
          "client_user_id": {
            "title": "Client User Id",
            "type": "string",
            "description": "A unique ID representing the end user. Typically this will be a user ID from your application. Personally identifiable information, such as an email address or phone number, should not be used in the client_user_id."
          },
          "created_on": {
            "title": "Created On",
            "type": "string",
            "description": "When your item is created",
            "format": "date-time"
          },
          "connected_sources": {
            "title": "Connected Sources",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConnectedSourceClientFacing"
            },
            "description": "A list of the users connected sources."
          }
        },
        "example": {
          "user_id": "a48de09a-5da4-4674-9728-94f87c2aaa41",
          "team_id": "689b9455-9f9b-4596-ad16-87af0be98d45",
          "client_user_id": "ff1d2016-ae1c-4ebd-95db-e3883b67543f",
          "connected_sources": [
            { "source": { "name": "Oura", "slug": "oura", "logo": "logo_url" } }
          ]
        }
      },
      "ClientFacingUserKey": {
        "title": "ClientFacingUserKey",
        "required": ["user_id", "client_user_id"],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "string",
            "description": "User id returned by vital create user request. This id should be stored in your database against the user and used for all interactions with the vital api.",
            "format": "uuid"
          },
          "user_key": {
            "title": "User Key",
            "type": "string",
            "description": "Deprecated. Please use user_id instead.",
            "format": "uuid"
          },
          "client_user_id": {
            "title": "Client User Id",
            "type": "string",
            "description": "A unique ID representing the end user. Typically this will be a user ID from your application. Personally identifiable information, such as an email address or phone number, should not be used in the client_user_id."
          }
        },
        "example": {
          "client_user_id": "50e07fa5-e9d9-4845-acf5-730a55903724",
          "user_id": "b62f7860-4f0d-4aa6-8dae-a427f620f415"
        }
      },
      "ClientFacingWorkout": {
        "title": "Workout Data",
        "required": [
          "user_id",
          "id",
          "time_start",
          "time_end",
          "calories",
          "sport",
          "hr_zones",
          "provider_id",
          "source"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "string",
            "description": "User id returned by vital create user request. This id should be stored in your database against the user and used for all interactions with the vital api.",
            "format": "uuid"
          },
          "user_key": {
            "title": "User Key",
            "type": "string",
            "format": "uuid"
          },
          "id": { "title": "Id", "type": "string", "format": "uuid" },
          "title": {
            "title": "Title",
            "type": "string",
            "description": "Title given for the workout"
          },
          "average_hr": {
            "title": "Average Hr",
            "type": "integer",
            "description": "Average heart rate during workout::bpm"
          },
          "max_hr": {
            "title": "Max Hr",
            "type": "integer",
            "description": "Max heart rate during workout::bpm"
          },
          "distance": {
            "title": "Distance",
            "type": "number",
            "description": "Cumulated distance for exercise.",
            "default": []
          },
          "time_start": {
            "title": "Time Start",
            "type": "string",
            "description": "Start time of the workout::time",
            "format": "date-time"
          },
          "time_end": {
            "title": "Time End",
            "type": "string",
            "description": "End time of the workout::time",
            "format": "date-time"
          },
          "calories": {
            "title": "Calories",
            "type": "number",
            "description": "Calories burned during the workout::kCal"
          },
          "sport": { "$ref": "#/components/schemas/ClientFacingSport" },
          "hr_zones": {
            "title": "Hr Zones",
            "type": "array",
            "items": { "type": "integer" },
            "description": "Time in minutes spent in different heart rate zones <50%, 50-60%, 60-70%, 70-80%, 80-90%, 90%+::seconds"
          },
          "moving_time": {
            "title": "Moving Time",
            "type": "integer",
            "description": "Time spent active during the workout::seconds"
          },
          "total_elevation_gain": {
            "title": "Total Elevation Gain",
            "type": "number",
            "description": "Elevation gain during the workout::meters"
          },
          "elev_high": {
            "title": "Elev High",
            "type": "number",
            "description": "Highest point of elevation::meters"
          },
          "elev_low": {
            "title": "Elev Low",
            "type": "number",
            "description": "Lowest point of elevation::meters"
          },
          "average_speed": {
            "title": "Average Speed",
            "type": "number",
            "description": "Average speed during workout in m/s::meters/sec"
          },
          "max_speed": {
            "title": "Max Speed",
            "type": "number",
            "description": "Max speed during workout in m/s::meters/sec"
          },
          "average_watts": {
            "title": "Average Watts",
            "type": "number",
            "description": "Average watts burned during exercise::watts"
          },
          "device_watts": {
            "title": "Device Watts",
            "type": "number",
            "description": "Watts burned during exercise::watts"
          },
          "max_watts": {
            "title": "Max Watts",
            "type": "number",
            "description": "Max watts burned during exercise::watts"
          },
          "weighted_average_watts": {
            "title": "Weighted Average Watts",
            "type": "number",
            "description": "Weighted average watts burned during exercise::watts"
          },
          "map": {
            "title": "Map",
            "type": "object",
            "description": "Map of workouts encoded as polyline"
          },
          "provider_id": {
            "title": "Provider Id",
            "type": "string",
            "description": "Provider ID given for that specific workout"
          },
          "source": { "$ref": "#/components/schemas/ClientFacingSource" }
        },
        "example": {
          "id": "76600991-8444-4b51-8a3d-c59601594069",
          "average_hr": 100,
          "max_hr": 190,
          "distance": 1700,
          "time_start": "2022-04-20T12:02:01.270584+00:00",
          "time_end": "2022-04-20T13:02:01.270716+00:00",
          "calories": 300,
          "sport": { "id": 1, "name": "football" },
          "source": {
            "name": "Strava",
            "slug": "strava",
            "logo": "https://logo_url.com"
          },
          "hr_zones": [100, 90, 10, 10, 200],
          "user_id": "b62b500a-6b1f-410d-b77a-5f97677ac233",
          "moving_time": 100,
          "total_elevation_gain": 10,
          "elev_high": 20.2,
          "elev_low": -10.2,
          "average_speed": 4.2,
          "max_speed": 7.8,
          "average_watts": 100,
          "device_watts": 80,
          "max_watts": 200,
          "weighted_average_watts": 250,
          "map": {
            "summary_polyline": "agn~Ftb{uOvr@daBunBjdBkHwiD????~Ngn@ha@_N~Ql`@"
          }
        }
      },
      "ClientSleepResponse": {
        "title": "Body Composition Data",
        "required": ["sleep"],
        "type": "object",
        "properties": {
          "sleep": {
            "title": "Sleep",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ClientFacingSleep" }
          }
        },
        "example": {
          "sleep": [
            {
              "id": "30639f2e-971c-49b2-8373-6d55966b6134",
              "date": "2022-04-20",
              "bedtime_start": "2022-04-20T13:02:01.154714+00:00",
              "bedtime_stop": "2022-04-20T13:02:01.154739+00:00",
              "timezone_offset": 2400,
              "duration": 28800,
              "total": 28800,
              "awake": 2400,
              "light": 2400,
              "rem": 2400,
              "deep": 2400,
              "hr_lowest": 43,
              "hr_average": 50,
              "efficiency": 0.97,
              "latency": 1000,
              "temperature_delta": -0.2,
              "average_hrv": 78,
              "respiratory_rate": 14,
              "source": {
                "name": "Oura",
                "slug": "oura",
                "logo": "https://logo_url.com"
              },
              "user_id": "7a649dac-3ef9-4e2d-bd6c-7b11185447b5"
            }
          ]
        }
      },
      "ClientWorkoutResponse": {
        "title": "ClientWorkoutResponse",
        "required": ["workouts"],
        "type": "object",
        "properties": {
          "workouts": {
            "title": "Workouts",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ClientFacingWorkout" }
          }
        },
        "example": {
          "workouts": {
            "id": "917aac3a-c4dc-4256-a6a7-f2e69367cf66",
            "average_hr": 100,
            "max_hr": 190,
            "distance": 1700,
            "time_start": "2022-04-20T12:02:01.273866+00:00",
            "time_end": "2022-04-20T13:02:01.273971+00:00",
            "calories": 300,
            "sport": { "id": 1, "name": "football" },
            "source": {
              "name": "Strava",
              "slug": "strava",
              "logo": "https://logo_url.com"
            },
            "hr_zones": [100, 90, 10, 10, 200],
            "user_id": "22b92942-6ca0-4069-8f5e-9f082117ce2c",
            "moving_time": 100,
            "total_elevation_gain": 10,
            "elev_high": 20.2,
            "elev_low": -10.2,
            "average_speed": 4.2,
            "max_speed": 7.8,
            "average_watts": 100,
            "device_watts": 80,
            "max_watts": 200,
            "weighted_average_watts": 250,
            "map": { "summary_polyline": "agn~Ftb{uOvr@daBunBjdBkHwiD????" }
          },
          "title": "Workout Data"
        }
      },
      "ConnectedSourceClientFacing": {
        "title": "ConnectedSourceClientFacing",
        "required": ["source"],
        "type": "object",
        "properties": {
          "source": { "$ref": "#/components/schemas/ClientFacingSource" }
        }
      },
      "DataStage": {
        "title": "DataStage",
        "enum": ["daily", "historical"],
        "description": "An enumeration."
      },
      "DeviceV2InDB": {
        "title": "DeviceV2InDB",
        "required": ["provider_id", "user_id", "source_id", "id"],
        "type": "object",
        "properties": {
          "data": {
            "title": "Data",
            "type": "string",
            "format": "json-string"
          },
          "provider_id": { "title": "Provider Id", "type": "string" },
          "user_id": { "title": "User Id", "type": "string", "format": "uuid" },
          "source_id": { "title": "Source Id", "type": "integer" },
          "id": { "title": "Id", "type": "string", "format": "uuid" },
          "source": { "$ref": "#/components/schemas/ClientFacingSource" }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ValidationError" }
          }
        }
      },
      "IndividualProviderData": {
        "title": "IndividualProviderData",
        "required": ["username", "password"],
        "type": "object",
        "properties": {
          "username": {
            "title": "Username",
            "type": "string",
            "description": "Username for provider"
          },
          "password": {
            "title": "Password",
            "type": "string",
            "description": "Password for provider"
          }
        }
      },
      "LabResultsMetadata": {
        "title": "LabResultsMetadata",
        "required": [
          "age",
          "dob",
          "patient",
          "date_reported",
          "date_collected",
          "specimen_number"
        ],
        "type": "object",
        "properties": {
          "age": { "title": "Age", "type": "string" },
          "dob": { "title": "Dob", "type": "string" },
          "clia_#": { "title": "Clia #", "type": "string" },
          "patient": { "title": "Patient", "type": "string" },
          "provider": { "title": "Provider", "type": "string" },
          "laboratory": { "title": "Laboratory", "type": "string" },
          "date_reported": { "title": "Date Reported", "type": "string" },
          "date_collected": { "title": "Date Collected", "type": "string" },
          "specimen_number": { "title": "Specimen Number", "type": "string" },
          "date_received": { "title": "Date Received", "type": "string" }
        },
        "example": {
          "age": "30",
          "dob": "1980-01-01",
          "clia_#": "123456789",
          "patient": "John Doe",
          "provider": "Dr. John Doe",
          "laboratory": "ABC Labs",
          "date_reported": "2020-01-01",
          "date_collected": "2020-01-01",
          "specimen_number": "123456789",
          "date_received": "2020-01-01"
        }
      },
      "Testkit": {
        "title": "Testkit",
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "description": { "type": "string" }
        },
        "example": {
            "id": "9u0ash8Hjghas-...",
            "name": "CGM",
            "description": "Freestyle libre CGM"
        }
      },
      "TestkitsResults": {
        "title": "TestkitsResults",
        "required": ["metadata", "results"],
        "type": "object",
        "properties": {
          "testkits": { 
            "title": "Testkits", 
            "type": "array", 
            "items": { "$ref": "#/components/schemas/Testkit" } 
          }
        },
        "example": {
          "testkits": [
            {
            "id": "9u0ash8Hjghas-...",
            "name": "CGM",
            "description": "Freestyle libre CGM"
            }
          ]
        }
      },
      "LabResultsRaw": {
        "title": "LabResultsRaw",
        "required": ["metadata", "results"],
        "type": "object",
        "properties": {
          "metadata": { "$ref": "#/components/schemas/LabResultsMetadata" },
          "results": { "title": "Results", "type": "object" }
        },
        "example": {
            "metadata": {
              "age": "30",
              "dob": "1980-01-01",
              "clia_#": "123456789",
              "patient": "John Doe",
              "provider": "Dr. John Doe",
              "laboratory": "ABC Labs",
              "date_reported": "2020-01-01",
              "date_collected": "2020-01-01",
              "specimen_number": "123456789",
              "date_received": "2020-01-01"
            },
            "results": {}
        }
      },
      "LinkTokenExchange": {
        "title": "LinkTokenExchange",
        "required": ["user_key"],
        "type": "object",
        "properties": {
          "user_key": {
            "title": "User Key",
            "type": "string",
            "description": "User id returned by vital create user request. This id should be stored in your database against the user and used for all interactions with the vital api.",
            "format": "uuid"
          },
          "provider": { "$ref": "#/components/schemas/Providers" },
          "redirect_url": { "title": "Redirect Url", "type": "string" }
        }
      },
      "LinkTokenExchangeResponse": {
        "title": "LinkTokenExchangeResponse",
        "required": ["link_token"],
        "type": "object",
        "properties": {
          "link_token": {
            "title": "Link Token",
            "type": "string",
            "description": "Link token to use to launch link widget"
          }
        },
        "example": { "link_token": "dGVzdCB0ZXN0IHRlc3Q=" }
      },
      "ManualActivityCreation": {
        "title": "ManualActivityCreation",
        "required": [
          "date",
          "active_energy_burned",
          "exercise_time",
          "standing_time",
          "move_time",
          "basal_energy_burned",
          "steps",
          "distance_walking_running",
          "vo2_max"
        ],
        "type": "object",
        "properties": {
          "date": { "title": "Date", "type": "string", "format": "date-time" },
          "active_energy_burned": {
            "title": "Active Energy Burned",
            "type": "number"
          },
          "exercise_time": { "title": "Exercise Time", "type": "number" },
          "standing_time": { "title": "Standing Time", "type": "number" },
          "move_time": { "title": "Move Time", "type": "number" },
          "basal_energy_burned": {
            "title": "Basal Energy Burned",
            "type": "array",
            "items": { "$ref": "#/components/schemas/QuantitySample" }
          },
          "steps": {
            "title": "Steps",
            "type": "array",
            "items": { "$ref": "#/components/schemas/QuantitySample" }
          },
          "distance_walking_running": {
            "title": "Distance Walking Running",
            "type": "array",
            "items": { "$ref": "#/components/schemas/QuantitySample" }
          },
          "vo2_max": {
            "title": "Vo2 Max",
            "type": "array",
            "items": { "$ref": "#/components/schemas/QuantitySample" }
          }
        }
      },
      "ManualActivityCreationPayload": {
        "title": "ManualActivityCreationPayload",
        "required": ["stage", "provider", "data"],
        "type": "object",
        "properties": {
          "stage": { "$ref": "#/components/schemas/DataStage" },
          "provider": { "$ref": "#/components/schemas/ManualProviders" },
          "start_date": {
            "title": "Start Date",
            "type": "string",
            "format": "date-time"
          },
          "end_date": {
            "title": "End Date",
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "title": "Data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ManualActivityCreation" }
          }
        }
      },
      "ManualBloodPressureCreation": {
        "title": "ManualBloodPressureCreation",
        "required": ["diastolic", "systolic", "pulse"],
        "type": "object",
        "properties": {
          "diastolic": { "$ref": "#/components/schemas/QuantitySample" },
          "systolic": { "$ref": "#/components/schemas/QuantitySample" },
          "pulse": { "$ref": "#/components/schemas/QuantitySample" }
        }
      },
      "ManualBloodPressureCreationPayload": {
        "title": "ManualBloodPressureCreationPayload",
        "required": ["stage", "provider", "data"],
        "type": "object",
        "properties": {
          "stage": { "$ref": "#/components/schemas/DataStage" },
          "provider": { "$ref": "#/components/schemas/ManualProviders" },
          "start_date": {
            "title": "Start Date",
            "type": "string",
            "format": "date-time"
          },
          "end_date": {
            "title": "End Date",
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "title": "Data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ManualBloodPressureCreation"
            }
          }
        }
      },
      "ManualBodyCreationIntermediate": {
        "title": "ManualBodyCreationIntermediate",
        "required": ["body_mass", "body_fat_percentage"],
        "type": "object",
        "properties": {
          "body_mass": {
            "title": "Body Mass",
            "type": "array",
            "items": { "$ref": "#/components/schemas/QuantitySample" }
          },
          "body_fat_percentage": {
            "title": "Body Fat Percentage",
            "type": "array",
            "items": { "$ref": "#/components/schemas/QuantitySample" }
          }
        }
      },
      "ManualBodyCreationPayload": {
        "title": "ManualBodyCreationPayload",
        "required": ["stage", "provider", "data"],
        "type": "object",
        "properties": {
          "stage": { "$ref": "#/components/schemas/DataStage" },
          "provider": { "$ref": "#/components/schemas/ManualProviders" },
          "start_date": {
            "title": "Start Date",
            "type": "string",
            "format": "date-time"
          },
          "end_date": {
            "title": "End Date",
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/ManualBodyCreationIntermediate"
          }
        }
      },
      "ManualProfileCreation": {
        "title": "ManualProfileCreation",
        "type": "object",
        "properties": {
          "biological_sex": { "$ref": "#/components/schemas/BiologicalSex" },
          "date_of_birth": {
            "title": "Date Of Birth",
            "type": "string",
            "format": "date-time"
          },
          "height": { "title": "Height", "type": "integer" }
        }
      },
      "ManualProfileCreationPayload": {
        "title": "ManualProfileCreationPayload",
        "required": ["stage", "provider", "data"],
        "type": "object",
        "properties": {
          "stage": { "$ref": "#/components/schemas/DataStage" },
          "provider": { "$ref": "#/components/schemas/ManualProviders" },
          "start_date": {
            "title": "Start Date",
            "type": "string",
            "format": "date-time"
          },
          "end_date": {
            "title": "End Date",
            "type": "string",
            "format": "date-time"
          },
          "data": { "$ref": "#/components/schemas/ManualProfileCreation" }
        }
      },
      "ManualProviders": {
        "title": "ManualProviders",
        "enum": [
          "beurer_ble",
          "omron_ble",
          "accuchek_ble",
          "contour_ble",
          "apple_health_kit",
          "manual"
        ],
        "description": "An enumeration."
      },
      "ManualSleepCreation": {
        "title": "ManualSleepCreation",
        "required": [
          "id",
          "start_date",
          "end_date",
          "heart_rate",
          "resting_heart_rate",
          "heart_rate_variability",
          "oxygen_saturation",
          "respiratory_rate"
        ],
        "type": "object",
        "properties": {
          "id": { "title": "Id", "type": "string" },
          "start_date": {
            "title": "Start Date",
            "type": "string",
            "format": "date-time"
          },
          "end_date": {
            "title": "End Date",
            "type": "string",
            "format": "date-time"
          },
          "source_bundle": { "title": "Source Bundle", "type": "string" },
          "heart_rate": {
            "title": "Heart Rate",
            "type": "array",
            "items": { "$ref": "#/components/schemas/QuantitySample" }
          },
          "resting_heart_rate": {
            "title": "Resting Heart Rate",
            "type": "array",
            "items": { "$ref": "#/components/schemas/QuantitySample" }
          },
          "heart_rate_variability": {
            "title": "Heart Rate Variability",
            "type": "array",
            "items": { "$ref": "#/components/schemas/QuantitySample" }
          },
          "oxygen_saturation": {
            "title": "Oxygen Saturation",
            "type": "array",
            "items": { "$ref": "#/components/schemas/QuantitySample" }
          },
          "respiratory_rate": {
            "title": "Respiratory Rate",
            "type": "array",
            "items": { "$ref": "#/components/schemas/QuantitySample" }
          }
        }
      },
      "ManualSleepCreationPayload": {
        "title": "ManualSleepCreationPayload",
        "required": ["stage", "provider", "data"],
        "type": "object",
        "properties": {
          "stage": { "$ref": "#/components/schemas/DataStage" },
          "provider": { "$ref": "#/components/schemas/ManualProviders" },
          "start_date": {
            "title": "Start Date",
            "type": "string",
            "format": "date-time"
          },
          "end_date": {
            "title": "End Date",
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "title": "Data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ManualSleepCreation" }
          }
        }
      },
      "ManualTimeseriesCreationPayload": {
        "title": "ManualTimeseriesCreationPayload",
        "required": ["stage", "provider", "data"],
        "type": "object",
        "properties": {
          "stage": { "$ref": "#/components/schemas/DataStage" },
          "provider": { "$ref": "#/components/schemas/ManualProviders" },
          "start_date": {
            "title": "Start Date",
            "type": "string",
            "format": "date-time"
          },
          "end_date": {
            "title": "End Date",
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "title": "Data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/QuantitySample" }
          }
        }
      },
      "ManualWorkoutCreation": {
        "title": "ManualWorkoutCreation",
        "required": [
          "id",
          "start_date",
          "end_date",
          "sport",
          "calories",
          "distance"
        ],
        "type": "object",
        "properties": {
          "id": { "title": "Id", "type": "string" },
          "start_date": {
            "title": "Start Date",
            "type": "string",
            "format": "date-time"
          },
          "end_date": {
            "title": "End Date",
            "type": "string",
            "format": "date-time"
          },
          "source_bundle": { "title": "Source Bundle", "type": "string" },
          "sport": { "title": "Sport", "type": "string" },
          "calories": { "title": "Calories", "type": "number" },
          "distance": { "title": "Distance", "type": "number" },
          "heart_rate": {
            "title": "Heart Rate",
            "type": "array",
            "items": { "$ref": "#/components/schemas/QuantitySample" },
            "default": []
          },
          "respiratory_rate": {
            "title": "Respiratory Rate",
            "type": "array",
            "items": { "$ref": "#/components/schemas/QuantitySample" },
            "default": []
          }
        }
      },
      "ManualWorkoutCreationPayload": {
        "title": "ManualWorkoutCreationPayload",
        "required": ["stage", "provider", "data"],
        "type": "object",
        "properties": {
          "stage": { "$ref": "#/components/schemas/DataStage" },
          "provider": { "$ref": "#/components/schemas/ManualProviders" },
          "start_date": {
            "title": "Start Date",
            "type": "string",
            "format": "date-time"
          },
          "end_date": {
            "title": "End Date",
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "title": "Data",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ManualWorkoutCreation" }
          }
        }
      },
      "MarkerClientFacing": {
        "title": "MarkerClientFacing",
        "required": ["name", "slug"],
        "type": "object",
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "slug": { "title": "Slug", "type": "string" },
          "description": { "title": "Description", "type": "string" }
        }
      },
      "OAuthProviders": {
        "title": "OAuthProviders",
        "enum": [
          "oura",
          "fitbit",
          "garmin",
          "strava",
          "wahoo",
          "ihealth",
          "withings",
          "google_fit"
        ],
        "description": "An enumeration."
      },
      "OrderResponse": {
        "title": "OrderResponse",
        "required": ["order", "status", "message"],
        "type": "object",
        "properties": {
          "order": { "$ref": "#/components/schemas/ClientFacingOrder" },
          "status": { "title": "Status", "type": "string" },
          "message": { "title": "Message", "type": "string" }
        }
      },
      "OrderStatus": {
        "title": "OrderStatus",
        "enum": [
          "ordered",
          "transit_customer",
          "out_for_delivery",
          "with_customer",
          "transit_lab",
          "delivered_to_lab",
          "processing_lab",
          "completed",
          "failure_to_deliver_to_customer",
          "failure_to_deliver_to_lab",
          "cancelled",
          "do_not_process",
          "unknown"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "OrdersRequest": {
        "title": "OrdersRequest",
        "required": [
          "testkit_id",
          "patient_address",
          "patient_details",
          "user_key"
        ],
        "type": "object",
        "properties": {
          "testkit_id": {
            "title": "Testkit Id",
            "type": "string",
            "description": "Testkit id",
            "format": "uuid"
          },
          "patient_address": { "$ref": "#/components/schemas/PatientAddress" },
          "patient_details": { "$ref": "#/components/schemas/PatientDetails" },
          "physician": { "$ref": "#/components/schemas/Physician" },
          "inbound_tracking_number": {
            "title": "Inbound Tracking Number",
            "type": "string"
          },
          "outbound_tracking_number": {
            "title": "Outbound Tracking Number",
            "type": "string"
          },
          "outbound_courier": { "title": "Outbound Courier", "type": "string" },
          "inbound_courier": { "title": "Inbound Courier", "type": "string" },
          "user_key": {
            "title": "User Key",
            "type": "string",
            "description": "User id returned by vital create user request. This id should be stored in your database against the user and used for all interactions with the vital api.",
            "format": "uuid"
          }
        }
      },
      "OrdersResponse": {
        "title": "OrdersResponse",
        "required": ["orders", "total", "page", "size"],
        "type": "object",
        "properties": {
          "orders": {
            "title": "Orders",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ClientFacingOrder" }
          },
          "total": { "title": "Total", "type": "integer" },
          "page": { "title": "Page", "type": "integer" },
          "size": { "title": "Size", "type": "integer" }
        },
        "example": {
          "orders": [
            {
              "id": "08daca65-4de0-4f4f-b9a1-2b5d356b3b6d",
              "team_id": "3e2d7ca4-1f42-4fa2-ad13-61bcab8291ae",
              "created_on": "2022-04-20T13:02:01.980402+00:00",
              "updated_on": "2022-04-20T13:02:01.980441+00:00",
              "status": "ordered",
              "user_id": "f6d58738-b4eb-40aa-a58d-a316a5840237",
              "testkit_id": "0f83b2f6-a0d0-4f4e-9678-eeb481ef60ec",
              "testkit": { "name": "CGM", "description": "Glucose CGM" }
            }
          ],
          "total": 14,
          "page": 1,
          "size": 50
        }
      },
      "PasswordProviders": {
        "title": "PasswordProviders",
        "enum": [
          "whoop",
          "renpho",
          "peloton",
          "zwift",
          "eight_sleep",
          "beurer"
        ],
        "description": "An enumeration."
      },
      "PatientAddress": {
        "title": "PatientAddress",
        "required": [
          "receiver_name",
          "street_number",
          "street",
          "city",
          "state",
          "zip",
          "country",
          "phone_number"
        ],
        "type": "object",
        "properties": {
          "receiver_name": { "title": "Receiver Name", "type": "string" },
          "street_number": { "title": "Street Number", "type": "string" },
          "street": { "title": "Street", "type": "string" },
          "city": { "title": "City", "type": "string" },
          "state": { "title": "State", "type": "string" },
          "zip": { "title": "Zip", "type": "string" },
          "country": { "title": "Country", "type": "string" },
          "phone_number": { "title": "Phone Number", "type": "string" }
        }
      },
      "PatientDetails": {
        "title": "PatientDetails",
        "required": ["dob", "gender"],
        "type": "object",
        "properties": {
          "dob": { "title": "Dob", "type": "string", "format": "date-time" },
          "gender": { "title": "Gender", "type": "string" }
        }
      },
      "Physician": {
        "title": "Physician",
        "required": ["first_name", "last_name", "npi", "id"],
        "type": "object",
        "properties": {
          "first_name": { "title": "First Name", "type": "string" },
          "last_name": { "title": "Last Name", "type": "string" },
          "email": { "title": "Email", "type": "string" },
          "npi": { "title": "Npi", "type": "string" },
          "licensed_states": {
            "title": "Licensed States",
            "type": "array",
            "items": { "type": "string" },
            "default": []
          },
          "id": { "title": "Id", "type": "integer" }
        }
      },
      "ProfileInDb": {
        "title": "ProfileInDb",
        "required": ["user_id", "source_id", "id"],
        "type": "object",
        "properties": {
          "data": {
            "title": "Data",
            "type": "string",
            "format": "json-string"
          },
          "user_id": { "title": "User Id", "type": "string", "format": "uuid" },
          "source_id": { "title": "Source Id", "type": "integer" },
          "priority_id": { "title": "Priority Id", "type": "integer" },
          "id": { "title": "Id", "type": "string", "format": "uuid" },
          "source": { "$ref": "#/components/schemas/ClientFacingSource" }
        }
      },
      "ProviderLinkResponse": {
        "title": "ProviderLinkResponse",
        "required": ["provider", "connected"],
        "type": "object",
        "properties": {
          "provider": { "$ref": "#/components/schemas/PasswordProviders" },
          "connected": { "title": "Connected", "type": "boolean" },
          "provider_id": { "title": "Provider Id", "type": "string" }
        },
        "example": {
          "provider": "zwift",
          "connected": true,
          "provider_id": "<provider_id>"
        }
      },
      "Providers": {
        "title": "Providers",
        "enum": [
          "oura",
          "fitbit",
          "garmin",
          "whoop",
          "strava",
          "renpho",
          "peloton",
          "wahoo",
          "zwift",
          "freestyle_libre",
          "eight_sleep",
          "withings",
          "apple_health_kit",
          "manual",
          "ihealth",
          "google_fit",
          "beurer_api",
          "beurer_ble",
          "omron_ble",
          "accuchek_ble",
          "contour_ble"
        ],
        "description": "An enumeration."
      },
      "QuantitySample": {
        "title": "QuantitySample",
        "required": ["value", "start_date", "end_date", "unit"],
        "type": "object",
        "properties": {
          "id": { "title": "Id", "type": "string" },
          "value": { "title": "Value", "type": "number" },
          "start_date": {
            "title": "Start Date",
            "type": "string",
            "format": "date-time"
          },
          "end_date": {
            "title": "End Date",
            "type": "string",
            "format": "date-time"
          },
          "source_bundle": { "title": "Source Bundle", "type": "string" },
          "type": { "title": "Type", "type": "string" },
          "unit": { "title": "Unit", "type": "string" }
        }
      },
      "RawActivity": {
        "title": "Activity Data",
        "required": ["activity"],
        "type": "object",
        "properties": {
          "activity": {
            "title": "Activity",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ActivityV2InDB" }
          }
        },
        "example": {
          "activity": [
            {
              "timestamp": "2022-04-20T13:02:01.179034+00:00",
              "data": { "data": "...provider_specific_data" },
              "provider_id": "e9e4f814-c79c-419e-841a-4fac6824b14d",
              "user_id": "1da6e6df-f25b-40f6-b420-a5d015a0bb80",
              "source_id": 1,
              "priority_id": 1
            }
          ]
        }
      },
      "RawBody": {
        "title": "Body Data",
        "required": ["body"],
        "type": "object",
        "properties": {
          "body": {
            "title": "Body",
            "type": "array",
            "items": { "$ref": "#/components/schemas/BodyV2InDB" }
          }
        },
        "example": {
          "body": [
            {
              "timestamp": "2022-04-20T13:02:01.187055+00:00",
              "data": { "data": "...provider_specific_data" },
              "provider_id": "c124eb27-82fa-4648-9f2b-ca24c1f5d6b0",
              "user_id": "43fd810c-ad5b-4380-af3c-877e844b9ba4",
              "source_id": 1,
              "priority_id": 1
            }
          ]
        }
      },
      "RawDevices": {
        "title": "Raw Devices Data",
        "required": ["devices"],
        "type": "object",
        "properties": {
          "devices": {
            "title": "Devices",
            "type": "array",
            "items": { "$ref": "#/components/schemas/DeviceV2InDB" }
          }
        },
        "example": {
          "devices": [
            {
              "data": { "data": "...provider_specific_data" },
              "provider_id": "a94a1283-afa8-4cad-ad10-db1aec638fdb",
              "user_id": "19f57a50-1164-4a76-a791-d78fd5f99cc0",
              "source_id": 1
            }
          ]
        }
      },
      "RawProfile": {
        "title": "Profile Data",
        "required": ["profile"],
        "type": "object",
        "properties": {
          "profile": { "$ref": "#/components/schemas/ProfileInDb" }
        },
        "example": {
          "profile": [
            {
              "data": { "data": "...provider_specific_data" },
              "provider_id": "3e23b3d9-c62a-45a2-a0b3-055b1124ac59",
              "user_id": "d7b561d9-8f9f-4d94-b8cb-003af9adfa2e",
              "source_id": 1
            }
          ]
        }
      },
      "RawSleep": {
        "title": "Raw Sleep data",
        "required": ["sleep"],
        "type": "object",
        "properties": {
          "sleep": {
            "title": "Sleep",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SleepV2InDB" }
          }
        },
        "example": {
          "sleep": [
            {
              "timestamp": "2022-04-20T13:02:01.203450+00:00",
              "data": { "data": "...provider_specific_data" },
              "provider_id": "47f247f4-5e04-4ace-a856-77dc6632c7c4",
              "user_id": "d468dcdf-0784-4260-a334-539eb149d2ad",
              "source_id": 1,
              "priority_id": 1
            }
          ]
        }
      },
      "RawWorkout": {
        "title": "Workouts Data",
        "required": ["workouts"],
        "type": "object",
        "properties": {
          "workouts": {
            "title": "Workouts",
            "type": "array",
            "items": { "$ref": "#/components/schemas/WorkoutV2InDB" }
          }
        },
        "example": {
          "workouts": [
            {
              "timestamp": "2022-04-20T13:02:01.216855+00:00",
              "data": { "provider_specific": "..._data" },
              "provider_id": "2cb9b107-34c5-4bab-b667-61c19b9b103a",
              "user_id": "79d4967e-1065-4e4b-9692-ed5e9e802f96",
              "source_id": 1,
              "priority_id": 1,
              "sport_id": 3
            }
          ]
        }
      },
      "Resource": {
        "title": "Resource",
        "enum": [
          "workouts",
          "activity",
          "sleep",
          "body",
          "workouts/stream",
          "sleep/stream",
          "profile",
          "blood_pressure",
          "blood_oxygen",
          "glucose",
          "heartrate"
        ],
        "description": "An enumeration."
      },
      "SleepV2InDB": {
        "title": "SleepV2InDB",
        "required": [
          "timestamp",
          "provider_id",
          "user_id",
          "source_id",
          "id",
          "source"
        ],
        "type": "object",
        "properties": {
          "timestamp": {
            "title": "Timestamp",
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "title": "Data",
            "type": "string",
            "format": "json-string"
          },
          "provider_id": { "title": "Provider Id", "type": "string" },
          "user_id": { "title": "User Id", "type": "string", "format": "uuid" },
          "source_id": { "title": "Source Id", "type": "integer" },
          "priority_id": { "title": "Priority Id", "type": "integer" },
          "id": { "title": "Id", "type": "string", "format": "uuid" },
          "source": { "$ref": "#/components/schemas/ClientFacingSource" },
          "priority": { "title": "Priority", "type": "integer" }
        }
      },
      "Source": {
        "title": "Provider",
        "required": ["name", "slug", "description", "logo", "id"],
        "type": "object",
        "properties": {
          "name": { "title": "Name", "type": "string" },
          "slug": { "title": "Slug", "type": "string" },
          "description": { "title": "Description", "type": "string" },
          "logo": { "title": "Logo", "type": "string" },
          "group": { "title": "Group", "type": "string" },
          "oauth_url": { "title": "Oauth Url", "type": "string" },
          "auth_type": {
            "title": "Auth Type",
            "type": "string",
            "default": "oauth"
          },
          "is_active": {
            "title": "Is Active",
            "type": "boolean",
            "default": true
          },
          "id": { "title": "Id", "type": "integer" }
        },
        "example": {
          "name": "Garmin",
          "slug": "hamin",
          "logo": "https://garmin.com",
          "description": "Garmin Watches",
          "oauth_url": "https://garmin_aouth_url.com",
          "auth_type": "oauth",
          "id": 1
        }
      },
      "TestkitClientFacing": {
        "title": "TestkitClientFacing",
        "required": ["id", "name", "description"],
        "type": "object",
        "properties": {
          "id": { "title": "Id", "type": "string", "format": "uuid" },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Testkit name"
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "Testkit decription"
          },
          "markers": {
            "title": "Markers",
            "type": "array",
            "items": { "$ref": "#/components/schemas/MarkerClientFacing" },
            "description": "The lab markers that test kit tests for",
            "default": []
          },
          "turnaround_time_lower": {
            "title": "Turnaround Time Lower",
            "type": "integer",
            "description": "Turnaround time lower in days"
          },
          "turnaround_time_upper": {
            "title": "Turnaround Time Upper",
            "type": "integer",
            "description": "Turnaround time upper in days"
          },
          "price": {
            "title": "Price",
            "type": "number",
            "description": "Price of testkit in dollars"
          }
        }
      },
      "TimeseriesResource": {
        "title": "TimeseriesResource",
        "enum": [
          "ige",
          "igg",
          "cholesterol",
          "cholesterol/total",
          "cholesterol/ldl",
          "cholesterol/hdl",
          "cholesterol/triglycerides",
          "glucose",
          "heartrate",
          "blood_pressure",
          "blood_oxygen"
        ],
        "description": "An enumeration."
      },
      "UserCreate": {
        "title": "UserCreate",
        "required": ["client_user_id"],
        "type": "object",
        "properties": {
          "client_user_id": {
            "title": "Client User Id",
            "type": "string",
            "description": "A unique ID representing the end user. Typically this will be a user ID from your application. Personally identifiable information, such as an email address or phone number, should not be used in the client_user_id."
          },
          "team_id": { "title": "Team Id", "type": "string", "format": "uuid" },
          "id": { "title": "Id", "type": "string" }
        }
      },
      "UserRefreshResponse": {
        "title": "UserRefreshResponse",
        "required": ["success", "user_id"],
        "type": "object",
        "properties": {
          "success": {
            "title": "Success",
            "type": "boolean",
            "description": "Whether operation was successful or not"
          },
          "user_id": { "title": "User Id", "type": "string", "format": "uuid" }
        },
        "example": {
          "success": true,
          "user_id": "29432536-2859-48cf-90ed-89916a06f3d3"
        }
      },
      "UserSuccessResponse": {
        "title": "UserSuccessResponse",
        "required": ["success"],
        "type": "object",
        "properties": {
          "success": {
            "title": "Success",
            "type": "boolean",
            "description": "Whether operation was successful or not"
          }
        },
        "example": { "success": true }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": ["loc", "msg", "type"],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": { "type": "string" }
          },
          "msg": { "title": "Message", "type": "string" },
          "type": { "title": "Error Type", "type": "string" }
        }
      },
      "VitalsResource": {
        "title": "VitalsResource",
        "enum": ["blood_pressure", "blood_oxygen", "glucose"],
        "description": "An enumeration."
      },
      "WorkoutV2InDB": {
        "title": "WorkoutV2InDB",
        "required": [
          "timestamp",
          "provider_id",
          "user_id",
          "source_id",
          "id",
          "sport_id",
          "source",
          "sport"
        ],
        "type": "object",
        "properties": {
          "timestamp": {
            "title": "Timestamp",
            "type": "string",
            "format": "date-time"
          },
          "data": {
            "title": "Data",
            "type": "string",
            "format": "json-string"
          },
          "provider_id": { "title": "Provider Id", "type": "string" },
          "user_id": { "title": "User Id", "type": "string", "format": "uuid" },
          "source_id": { "title": "Source Id", "type": "integer" },
          "priority_id": { "title": "Priority Id", "type": "integer" },
          "id": { "title": "Id", "type": "string", "format": "uuid" },
          "sport_id": { "title": "Sport Id", "type": "integer" },
          "source": { "$ref": "#/components/schemas/ClientFacingSource" },
          "sport": { "$ref": "#/components/schemas/ClientFacingSport" }
        }
      }
    }
  }
}
